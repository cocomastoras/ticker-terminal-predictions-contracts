/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, BigNumberish, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { MarketMakerAMM, MarketMakerAMMInterface } from "../MarketMakerAMM.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "uint256[]",
        "name": "initMarketIds",
        "type": "uint256[]"
      },
      {
        "internalType": "address",
        "name": "_admin",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [],
    "name": "AlreadyClaimed",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "IndexOutOfBounds",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidInput",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidOutput",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidReserves",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidRound",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidTimestamp",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotAuthorised",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "OracleError",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "RoundExpired",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "RoundNotYetInitialised",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "RoundResolved",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "SlippageReached",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "MarketId",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "RoundId",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "User",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "AmountIn",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "Side",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "AmountOut",
        "type": "uint256"
      }
    ],
    "name": "MarketEnter",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "MarketId",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "RoundId",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "User",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "AmountInA",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "AmountInB",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "AmountOut",
        "type": "uint256"
      }
    ],
    "name": "MarketExit",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "MarketId",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "RoundId",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "User",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "Result",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "AmountOut",
        "type": "uint256"
      }
    ],
    "name": "MarketRedeem",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "RoundId",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "Resolver",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "Fees",
        "type": "uint256"
      }
    ],
    "name": "RoundResolvedBy",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "checkResolutionStatus",
    "outputs": [
      {
        "internalType": "bool",
        "name": "isResolvable",
        "type": "bool"
      },
      {
        "internalType": "uint256",
        "name": "secondsLeft",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "currentRoundFees",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "claimFees",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "currentAndFutureRoundInfo",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "roundId",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "marketId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roundId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roundStart",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "marketTreasury",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "yesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "noReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outYesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outNoReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "currentPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "result",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "delistingRound",
            "type": "uint256"
          },
          {
            "internalType": "uint256[]",
            "name": "history",
            "type": "uint256[]"
          }
        ],
        "internalType": "struct MarketMakerAMM.MarketDataWithHistory[]",
        "name": "marketDataCurrent",
        "type": "tuple[]"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "marketId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roundId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roundStart",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "marketTreasury",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "yesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "noReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outYesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outNoReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "currentPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "result",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "delistingRound",
            "type": "uint256"
          },
          {
            "internalType": "uint256[]",
            "name": "history",
            "type": "uint256[]"
          }
        ],
        "internalType": "struct MarketMakerAMM.MarketDataWithHistory[]",
        "name": "marketDataFuture",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "currentRoundInfo",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "marketId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roundId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roundStart",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "marketTreasury",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "yesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "noReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outYesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outNoReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "currentPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "result",
            "type": "uint256"
          }
        ],
        "internalType": "struct MarketMakerAMM.MarketData[]",
        "name": "marketData",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "marketId",
        "type": "uint256"
      }
    ],
    "name": "currentSingleMarketRoundInfo",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "marketId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roundId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roundStart",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "marketTreasury",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "yesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "noReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outYesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outNoReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "currentPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "result",
            "type": "uint256"
          }
        ],
        "internalType": "struct MarketMakerAMM.MarketData",
        "name": "marketData",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "index",
        "type": "uint256"
      }
    ],
    "name": "delistMarket",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "minAmountOut",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "marketId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "roundId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "side",
        "type": "uint256"
      }
    ],
    "name": "enterMarket",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "minNativeAmountOut",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "marketId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "roundId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "amountYes",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "amountNo",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "toBeExchanged",
        "type": "uint256"
      }
    ],
    "name": "exitMarket",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "fees",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getAllAvailableMarkets",
    "outputs": [
      {
        "internalType": "uint256[]",
        "name": "",
        "type": "uint256[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getAllMarkets",
    "outputs": [
      {
        "internalType": "uint256[]",
        "name": "",
        "type": "uint256[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "amountIn",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "marketId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "roundId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "side",
        "type": "uint256"
      }
    ],
    "name": "getAmountOut",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "amountOut",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getBothMarkets",
    "outputs": [
      {
        "internalType": "uint256[]",
        "name": "",
        "type": "uint256[]"
      },
      {
        "internalType": "uint256[]",
        "name": "",
        "type": "uint256[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "marketId",
        "type": "uint256"
      }
    ],
    "name": "inputMarketRoundHistory",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "marketId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roundId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outYesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outNoReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "openPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "closePrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "result",
            "type": "uint256"
          }
        ],
        "internalType": "struct MarketMakerAMM.MarketHistory[]",
        "name": "marketData",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "roundId",
        "type": "uint256"
      }
    ],
    "name": "inputRoundInfo",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "marketId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roundId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roundStart",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "marketTreasury",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "yesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "noReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outYesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outNoReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "currentPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "result",
            "type": "uint256"
          }
        ],
        "internalType": "struct MarketMakerAMM.MarketData[]",
        "name": "marketData",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "marketId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "roundId",
        "type": "uint256"
      }
    ],
    "name": "inputSingleMarketRoundInfo",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "marketId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roundId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roundStart",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "marketTreasury",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "yesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "noReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outYesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outNoReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "currentPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "result",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "delistingRound",
            "type": "uint256"
          },
          {
            "internalType": "uint256[]",
            "name": "history",
            "type": "uint256[]"
          }
        ],
        "internalType": "struct MarketMakerAMM.MarketDataWithHistory",
        "name": "marketData",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "marketId",
        "type": "uint256"
      }
    ],
    "name": "marketToDelistingRound",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "delistRound",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "index",
        "type": "uint256"
      }
    ],
    "name": "putMarketOnDelist",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "marketId",
        "type": "uint256"
      }
    ],
    "name": "redeemPendingRoundsPerMarketId",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "marketId",
        "type": "uint256"
      }
    ],
    "name": "redeemRoundsPerMarketIdCapped",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "index",
        "type": "uint256"
      }
    ],
    "name": "registerMarket",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "resolveMarkets",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "roundStart",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "universalRound",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newAdmin",
        "type": "address"
      }
    ],
    "name": "updateAdmin",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "userDataPerCurrentRoundId",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "marketId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roundId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "result",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outYesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outNoReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "userYesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "userNoReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "treasury",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "userRedeemed",
            "type": "uint256"
          }
        ],
        "internalType": "struct MarketMakerAMM.UserData[]",
        "name": "userData",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "marketId",
        "type": "uint256"
      }
    ],
    "name": "userDataPerMarketAndCurrentRoundId",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "marketId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roundId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "result",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outYesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outNoReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "userYesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "userNoReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "treasury",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "userRedeemed",
            "type": "uint256"
          }
        ],
        "internalType": "struct MarketMakerAMM.UserData",
        "name": "userData",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "marketId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "roundId",
        "type": "uint256"
      }
    ],
    "name": "userDataPerMarketIdAndRoundId",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "marketId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roundId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "result",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outYesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outNoReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "userYesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "userNoReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "treasury",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "userRedeemed",
            "type": "uint256"
          }
        ],
        "internalType": "struct MarketMakerAMM.UserData",
        "name": "userData",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "marketId",
        "type": "uint256"
      },
      {
        "internalType": "uint256[]",
        "name": "roundIds",
        "type": "uint256[]"
      }
    ],
    "name": "userDataPerMarketIdAndRoundIds",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "marketId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roundId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "result",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outYesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outNoReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "userYesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "userNoReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "treasury",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "userRedeemed",
            "type": "uint256"
          }
        ],
        "internalType": "struct MarketMakerAMM.UserData[]",
        "name": "userData",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "roundId",
        "type": "uint256"
      }
    ],
    "name": "userDataPerRoundId",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "marketId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roundId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "result",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outYesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outNoReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "userYesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "userNoReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "treasury",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "userRedeemed",
            "type": "uint256"
          }
        ],
        "internalType": "struct MarketMakerAMM.UserData[]",
        "name": "userData",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "userToUnclaimedRounds",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "marketId",
            "type": "uint256"
          },
          {
            "internalType": "uint256[]",
            "name": "roundIds",
            "type": "uint256[]"
          }
        ],
        "internalType": "struct MarketMakerAMM.UserToRoundsPerMarket[]",
        "name": "roundsPerMarket",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "marketId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "page",
        "type": "uint256"
      }
    ],
    "name": "userUnclaimedRoundsDataPerMarketId",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "total",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "marketId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "roundId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "result",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outYesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "outNoReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "userYesReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "userNoReserves",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "treasury",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "userRedeemed",
            "type": "uint256"
          }
        ],
        "internalType": "struct MarketMakerAMM.UserData[]",
        "name": "userData",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "marketId",
        "type": "uint256"
      }
    ],
    "name": "userUnclaimedRoundsPerMarketId",
    "outputs": [
      {
        "internalType": "uint256[]",
        "name": "roundIds",
        "type": "uint256[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "marketId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "page",
        "type": "uint256"
      }
    ],
    "name": "userUnclaimedRoundsPerMarketIdWithPage",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "total",
        "type": "uint256"
      },
      {
        "internalType": "uint256[]",
        "name": "roundIds",
        "type": "uint256[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  const _bytecode = "";

  
      type MarketMakerAMMConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: MarketMakerAMMConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class MarketMakerAMM__factory extends ContractFactory {
    
      constructor(...args: MarketMakerAMMConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(initMarketIds: BigNumberish[], _admin: AddressLike, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(initMarketIds, _admin, overrides || {});
    };
    override deploy(initMarketIds: BigNumberish[], _admin: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(initMarketIds, _admin, overrides || {}) as Promise<MarketMakerAMM & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): MarketMakerAMM__factory {
      return super.connect(runner) as MarketMakerAMM__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): MarketMakerAMMInterface {
      return new Interface(_abi) as MarketMakerAMMInterface;
    }
    
    override attach(address: string | Addressable): MarketMakerAMM {
      return super.attach(address) as MarketMakerAMM;
    }
  static connect(address: string, runner?: ContractRunner | null): MarketMakerAMM {
      return new Contract(address, _abi, runner) as unknown as MarketMakerAMM;
    }
  }

  
  