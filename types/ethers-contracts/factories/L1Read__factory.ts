/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { L1Read, L1ReadInterface } from "../L1Read.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "uint32",
        "name": "perp_dex_index",
        "type": "uint32"
      },
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "accountMarginSummary",
    "outputs": [
      {
        "components": [
          {
            "internalType": "int64",
            "name": "accountValue",
            "type": "int64"
          },
          {
            "internalType": "uint64",
            "name": "marginUsed",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "ntlPos",
            "type": "uint64"
          },
          {
            "internalType": "int64",
            "name": "rawUsd",
            "type": "int64"
          }
        ],
        "internalType": "struct L1Read.AccountMarginSummary",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint32",
        "name": "asset",
        "type": "uint32"
      }
    ],
    "name": "bbo",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint64",
            "name": "bid",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "ask",
            "type": "uint64"
          }
        ],
        "internalType": "struct L1Read.Bbo",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "coreUserExists",
    "outputs": [
      {
        "components": [
          {
            "internalType": "bool",
            "name": "exists",
            "type": "bool"
          }
        ],
        "internalType": "struct L1Read.CoreUserExists",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "delegations",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "validator",
            "type": "address"
          },
          {
            "internalType": "uint64",
            "name": "amount",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "lockedUntilTimestamp",
            "type": "uint64"
          }
        ],
        "internalType": "struct L1Read.Delegation[]",
        "name": "",
        "type": "tuple[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "delegatorSummary",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint64",
            "name": "delegated",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "undelegated",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "totalPendingWithdrawal",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "nPendingWithdrawals",
            "type": "uint64"
          }
        ],
        "internalType": "struct L1Read.DelegatorSummary",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "l1BlockNumber",
    "outputs": [
      {
        "internalType": "uint64",
        "name": "",
        "type": "uint64"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint32",
        "name": "index",
        "type": "uint32"
      }
    ],
    "name": "markPx",
    "outputs": [
      {
        "internalType": "uint64",
        "name": "",
        "type": "uint64"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint32",
        "name": "index",
        "type": "uint32"
      }
    ],
    "name": "oraclePx",
    "outputs": [
      {
        "internalType": "uint64",
        "name": "",
        "type": "uint64"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint32",
        "name": "perp",
        "type": "uint32"
      }
    ],
    "name": "perpAssetInfo",
    "outputs": [
      {
        "components": [
          {
            "internalType": "string",
            "name": "coin",
            "type": "string"
          },
          {
            "internalType": "uint32",
            "name": "marginTableId",
            "type": "uint32"
          },
          {
            "internalType": "uint8",
            "name": "szDecimals",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "maxLeverage",
            "type": "uint8"
          },
          {
            "internalType": "bool",
            "name": "onlyIsolated",
            "type": "bool"
          }
        ],
        "internalType": "struct L1Read.PerpAssetInfo",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "internalType": "uint16",
        "name": "perp",
        "type": "uint16"
      }
    ],
    "name": "position",
    "outputs": [
      {
        "components": [
          {
            "internalType": "int64",
            "name": "szi",
            "type": "int64"
          },
          {
            "internalType": "uint64",
            "name": "entryNtl",
            "type": "uint64"
          },
          {
            "internalType": "int64",
            "name": "isolatedRawUsd",
            "type": "int64"
          },
          {
            "internalType": "uint32",
            "name": "leverage",
            "type": "uint32"
          },
          {
            "internalType": "bool",
            "name": "isIsolated",
            "type": "bool"
          }
        ],
        "internalType": "struct L1Read.Position",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "internalType": "uint64",
        "name": "token",
        "type": "uint64"
      }
    ],
    "name": "spotBalance",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint64",
            "name": "total",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "hold",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "entryNtl",
            "type": "uint64"
          }
        ],
        "internalType": "struct L1Read.SpotBalance",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint32",
        "name": "spot",
        "type": "uint32"
      }
    ],
    "name": "spotInfo",
    "outputs": [
      {
        "components": [
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "internalType": "uint64[2]",
            "name": "tokens",
            "type": "uint64[2]"
          }
        ],
        "internalType": "struct L1Read.SpotInfo",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint32",
        "name": "index",
        "type": "uint32"
      }
    ],
    "name": "spotPx",
    "outputs": [
      {
        "internalType": "uint64",
        "name": "",
        "type": "uint64"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint32",
        "name": "token",
        "type": "uint32"
      }
    ],
    "name": "tokenInfo",
    "outputs": [
      {
        "components": [
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "internalType": "uint64[]",
            "name": "spots",
            "type": "uint64[]"
          },
          {
            "internalType": "uint64",
            "name": "deployerTradingFeeShare",
            "type": "uint64"
          },
          {
            "internalType": "address",
            "name": "deployer",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "evmContract",
            "type": "address"
          },
          {
            "internalType": "uint8",
            "name": "szDecimals",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "weiDecimals",
            "type": "uint8"
          },
          {
            "internalType": "int8",
            "name": "evmExtraWeiDecimals",
            "type": "int8"
          }
        ],
        "internalType": "struct L1Read.TokenInfo",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint32",
        "name": "token",
        "type": "uint32"
      }
    ],
    "name": "tokenSupply",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint64",
            "name": "maxSupply",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "totalSupply",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "circulatingSupply",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "futureEmissions",
            "type": "uint64"
          },
          {
            "components": [
              {
                "internalType": "address",
                "name": "user",
                "type": "address"
              },
              {
                "internalType": "uint64",
                "name": "balance",
                "type": "uint64"
              }
            ],
            "internalType": "struct L1Read.UserBalance[]",
            "name": "nonCirculatingUserBalances",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct L1Read.TokenSupply",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "vault",
        "type": "address"
      }
    ],
    "name": "userVaultEquity",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint64",
            "name": "equity",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "lockedUntilTimestamp",
            "type": "uint64"
          }
        ],
        "internalType": "struct L1Read.UserVaultEquity",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "user",
        "type": "address"
      }
    ],
    "name": "withdrawable",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint64",
            "name": "withdrawable",
            "type": "uint64"
          }
        ],
        "internalType": "struct L1Read.Withdrawable",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  const _bytecode = "0x6080604052348015600e575f5ffd5b50613ac78061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610109575f3560e01c80639dbfb13f116100a0578063bffe34861161006f578063bffe34861461033b578063c0f0f5ef1461036b578063c8eec8c61461039b578063ce513b6f146103cb578063ee1b5af1146103fb57610109565b80639dbfb13f1461027b578063a69610d1146102ab578063b6dff0b5146102db578063be06f7ac1461030b57610109565b806389cf7c89116100dc57806389cf7c89146101bb5780638d1f4264146101eb578063907027591461021b578063944fa5261461024b57610109565b8063298c90051461010d57806337f980a51461012b5780634162cd321461015b57806368fb11091461018b575b5f5ffd5b61011561042b565b6040516101229190611739565b60405180910390f35b610145600480360381019061014091906117bd565b61050b565b604051610152919061184a565b60405180910390f35b6101756004803603810190610170919061189c565b6105ff565b60405161018291906119ee565b60405180910390f35b6101a560048036038101906101a0919061189c565b6106f3565b6040516101b29190611b93565b60405180910390f35b6101d560048036038101906101d09190611bea565b6107e7565b6040516101e29190611ca9565b60405180910390f35b6102056004803603810190610200919061189c565b6108de565b6040516102129190611cef565b60405180910390f35b6102356004803603810190610230919061189c565b6109d2565b6040516102429190611739565b60405180910390f35b61026560048036038101906102609190611d08565b610abf565b6040516102729190611d99565b60405180910390f35b610295600480360381019061029091906117bd565b610bb6565b6040516102a29190611dcc565b60405180910390f35b6102c560048036038101906102c09190611e0f565b610caa565b6040516102d29190611e8d565b60405180910390f35b6102f560048036038101906102f0919061189c565b610da1565b6040516103029190611f5f565b60405180910390f35b6103256004803603810190610320919061189c565b610e95565b60405161033291906120c7565b60405180910390f35b610355600480360381019061035091906117bd565b610f89565b60405161036291906121cf565b60405180910390f35b6103856004803603810190610380919061189c565b611077565b6040516103929190611739565b60405180910390f35b6103b560048036038101906103b0919061189c565b611164565b6040516103c29190611739565b60405180910390f35b6103e560048036038101906103e091906117bd565b611251565b6040516103f29190612209565b60405180910390f35b61041560048036038101906104109190612222565b611345565b604051610422919061228d565b60405180910390f35b5f5f606061080973ffffffffffffffffffffffffffffffffffffffff1660405160200160405160208183030381529060405260405161046a91906122ea565b5f60405180830381855afa9150503d805f81146104a2576040519150601f19603f3d011682016040523d82523d5f602084013e6104a7565b606091505b508092508193505050816104f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e790612380565b60405180910390fd5b8080602001905181019061050491906123b2565b9250505090565b61051361143c565b5f606061080573ffffffffffffffffffffffffffffffffffffffff168460405160200161054091906123ec565b60405160208183030381529060405260405161055c91906122ea565b5f60405180830381855afa9150503d805f8114610594576040519150601f19603f3d011682016040523d82523d5f602084013e610599565b606091505b508092508193505050816105e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d990612475565b60405180910390fd5b808060200190518101906105f69190612588565b92505050919050565b610607611488565b5f606061080a73ffffffffffffffffffffffffffffffffffffffff168460405160200161063491906125c2565b60405160208183030381529060405260405161065091906122ea565b5f60405180830381855afa9150503d805f8114610688576040519150601f19603f3d011682016040523d82523d5f602084013e61068d565b606091505b508092508193505050816106d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106cd9061264b565b60405180910390fd5b808060200190518101906106ea919061281c565b92505050919050565b6106fb6114c1565b5f606061080c73ffffffffffffffffffffffffffffffffffffffff168460405160200161072891906125c2565b60405160208183030381529060405260405161074491906122ea565b5f60405180830381855afa9150503d805f811461077c576040519150601f19603f3d011682016040523d82523d5f602084013e610781565b606091505b508092508193505050816107ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c1906128ad565b60405180910390fd5b808060200190518101906107de9190612acc565b92505050919050565b6107ef61153e565b5f606061080073ffffffffffffffffffffffffffffffffffffffff16858560405160200161081e929190612b22565b60405160208183030381529060405260405161083a91906122ea565b5f60405180830381855afa9150503d805f8114610872576040519150601f19603f3d011682016040523d82523d5f602084013e610877565b606091505b508092508193505050816108c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b790612b93565b60405180910390fd5b808060200190518101906108d49190612c64565b9250505092915050565b6108e6611580565b5f606061080e73ffffffffffffffffffffffffffffffffffffffff168460405160200161091391906125c2565b60405160208183030381529060405260405161092f91906122ea565b5f60405180830381855afa9150503d805f8114610967576040519150601f19603f3d011682016040523d82523d5f602084013e61096c565b606091505b508092508193505050816109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac90612cd9565b60405180910390fd5b808060200190518101906109c99190612d44565b92505050919050565b5f5f606061080873ffffffffffffffffffffffffffffffffffffffff1684604051602001610a0091906125c2565b604051602081830303815290604052604051610a1c91906122ea565b5f60405180830381855afa9150503d805f8114610a54576040519150601f19603f3d011682016040523d82523d5f602084013e610a59565b606091505b50809250819350505081610aa2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9990612db9565b60405180910390fd5b80806020019051810190610ab691906123b2565b92505050919050565b610ac76115ac565b5f606061080f73ffffffffffffffffffffffffffffffffffffffff168585604051602001610af6929190612dd7565b604051602081830303815290604052604051610b1291906122ea565b5f60405180830381855afa9150503d805f8114610b4a576040519150601f19603f3d011682016040523d82523d5f602084013e610b4f565b606091505b50809250819350505081610b98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8f90612e6e565b60405180910390fd5b80806020019051810190610bac9190612f01565b9250505092915050565b610bbe6115ea565b5f606061081073ffffffffffffffffffffffffffffffffffffffff1684604051602001610beb91906123ec565b604051602081830303815290604052604051610c0791906122ea565b5f60405180830381855afa9150503d805f8114610c3f576040519150601f19603f3d011682016040523d82523d5f602084013e610c44565b606091505b50809250819350505081610c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8490612f9c565b60405180910390fd5b80806020019051810190610ca19190612ff3565b92505050919050565b610cb26115fe565b5f606061080173ffffffffffffffffffffffffffffffffffffffff168585604051602001610ce192919061301e565b604051602081830303815290604052604051610cfd91906122ea565b5f60405180830381855afa9150503d805f8114610d35576040519150601f19603f3d011682016040523d82523d5f602084013e610d3a565b606091505b50809250819350505081610d83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7a906130b5565b60405180910390fd5b80806020019051810190610d979190613134565b9250505092915050565b610da961163a565b5f606061080b73ffffffffffffffffffffffffffffffffffffffff1684604051602001610dd691906125c2565b604051602081830303815290604052604051610df291906122ea565b5f60405180830381855afa9150503d805f8114610e2a576040519150601f19603f3d011682016040523d82523d5f602084013e610e2f565b606091505b50809250819350505081610e78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6f906131a9565b60405180910390fd5b80806020019051810190610e8c91906132de565b92505050919050565b610e9d61165a565b5f606061080d73ffffffffffffffffffffffffffffffffffffffff1684604051602001610eca91906125c2565b604051602081830303815290604052604051610ee691906122ea565b5f60405180830381855afa9150503d805f8114610f1e576040519150601f19603f3d011682016040523d82523d5f602084013e610f23565b606091505b50809250819350505081610f6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6390613395565b60405180910390fd5b80806020019051810190610f809190613565565b92505050919050565b60605f606061080473ffffffffffffffffffffffffffffffffffffffff1684604051602001610fb891906123ec565b604051602081830303815290604052604051610fd491906122ea565b5f60405180830381855afa9150503d805f811461100c576040519150601f19603f3d011682016040523d82523d5f602084013e611011565b606091505b5080925081935050508161105a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110519061361c565b60405180910390fd5b8080602001905181019061106e919061375b565b92505050919050565b5f5f606061080773ffffffffffffffffffffffffffffffffffffffff16846040516020016110a591906125c2565b6040516020818303038152906040526040516110c191906122ea565b5f60405180830381855afa9150503d805f81146110f9576040519150601f19603f3d011682016040523d82523d5f602084013e6110fe565b606091505b50809250819350505081611147576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113e906137ec565b60405180910390fd5b8080602001905181019061115b91906123b2565b92505050919050565b5f5f606061080673ffffffffffffffffffffffffffffffffffffffff168460405160200161119291906125c2565b6040516020818303038152906040526040516111ae91906122ea565b5f60405180830381855afa9150503d805f81146111e6576040519150601f19603f3d011682016040523d82523d5f602084013e6111eb565b606091505b50809250819350505081611234576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122b90613854565b60405180910390fd5b8080602001905181019061124891906123b2565b92505050919050565b6112596116ad565b5f606061080373ffffffffffffffffffffffffffffffffffffffff168460405160200161128691906123ec565b6040516020818303038152906040526040516112a291906122ea565b5f60405180830381855afa9150503d805f81146112da576040519150601f19603f3d011682016040523d82523d5f602084013e6112df565b606091505b50809250819350505081611328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131f906138e2565b60405180910390fd5b8080602001905181019061133c9190613939565b92505050919050565b61134d6116c9565b5f606061080273ffffffffffffffffffffffffffffffffffffffff16858560405160200161137c929190613964565b60405160208183030381529060405260405161139891906122ea565b5f60405180830381855afa9150503d805f81146113d0576040519150601f19603f3d011682016040523d82523d5f602084013e6113d5565b606091505b5080925081935050508161141e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611415906139fb565b60405180910390fd5b808060200190518101906114329190613a66565b9250505092915050565b60405180608001604052805f67ffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f67ffffffffffffffff1681525090565b6040518060a00160405280606081526020015f63ffffffff1681526020015f60ff1681526020015f60ff1681526020015f151581525090565b60405180610100016040528060608152602001606081526020015f67ffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f60ff1681526020015f60ff1681526020015f5f0b81525090565b6040518060a001604052805f60070b81526020015f67ffffffffffffffff1681526020015f60070b81526020015f63ffffffff1681526020015f151581525090565b60405180604001604052805f67ffffffffffffffff1681526020015f67ffffffffffffffff1681525090565b60405180608001604052805f60070b81526020015f67ffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f60070b81525090565b60405180602001604052805f151581525090565b60405180606001604052805f67ffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f67ffffffffffffffff1681525090565b6040518060400160405280606081526020016116546116f5565b81525090565b6040518060a001604052805f67ffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f67ffffffffffffffff168152602001606081525090565b60405180602001604052805f67ffffffffffffffff1681525090565b60405180604001604052805f67ffffffffffffffff1681526020015f67ffffffffffffffff1681525090565b6040518060400160405280600290602082028036833780820191505090505090565b5f67ffffffffffffffff82169050919050565b61173381611717565b82525050565b5f60208201905061174c5f83018461172a565b92915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61178c82611763565b9050919050565b61179c81611782565b81146117a6575f5ffd5b50565b5f813590506117b781611793565b92915050565b5f602082840312156117d2576117d161175b565b5b5f6117df848285016117a9565b91505092915050565b6117f181611717565b82525050565b608082015f82015161180b5f8501826117e8565b50602082015161181e60208501826117e8565b50604082015161183160408501826117e8565b50606082015161184460608501826117e8565b50505050565b5f60808201905061185d5f8301846117f7565b92915050565b5f63ffffffff82169050919050565b61187b81611863565b8114611885575f5ffd5b50565b5f8135905061189681611872565b92915050565b5f602082840312156118b1576118b061175b565b5b5f6118be84828501611888565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611909826118c7565b61191381856118d1565b93506119238185602086016118e1565b61192c816118ef565b840191505092915050565b61194081611863565b82525050565b5f60ff82169050919050565b61195b81611946565b82525050565b5f8115159050919050565b61197581611961565b82525050565b5f60a083015f8301518482035f86015261199582826118ff565b91505060208301516119aa6020860182611937565b5060408301516119bd6040860182611952565b5060608301516119d06060860182611952565b5060808301516119e3608086018261196c565b508091505092915050565b5f6020820190508181035f830152611a06818461197b565b905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f611a4283836117e8565b60208301905092915050565b5f602082019050919050565b5f611a6482611a0e565b611a6e8185611a18565b9350611a7983611a28565b805f5b83811015611aa9578151611a908882611a37565b9750611a9b83611a4e565b925050600181019050611a7c565b5085935050505092915050565b611abf81611782565b82525050565b5f815f0b9050919050565b611ad981611ac5565b82525050565b5f61010083015f8301518482035f860152611afa82826118ff565b91505060208301518482036020860152611b148282611a5a565b9150506040830151611b2960408601826117e8565b506060830151611b3c6060860182611ab6565b506080830151611b4f6080860182611ab6565b5060a0830151611b6260a0860182611952565b5060c0830151611b7560c0860182611952565b5060e0830151611b8860e0860182611ad0565b508091505092915050565b5f6020820190508181035f830152611bab8184611adf565b905092915050565b5f61ffff82169050919050565b611bc981611bb3565b8114611bd3575f5ffd5b50565b5f81359050611be481611bc0565b92915050565b5f5f60408385031215611c0057611bff61175b565b5b5f611c0d858286016117a9565b9250506020611c1e85828601611bd6565b9150509250929050565b5f8160070b9050919050565b611c3d81611c28565b82525050565b60a082015f820151611c575f850182611c34565b506020820151611c6a60208501826117e8565b506040820151611c7d6040850182611c34565b506060820151611c906060850182611937565b506080820151611ca3608085018261196c565b50505050565b5f60a082019050611cbc5f830184611c43565b92915050565b604082015f820151611cd65f8501826117e8565b506020820151611ce960208501826117e8565b50505050565b5f604082019050611d025f830184611cc2565b92915050565b5f5f60408385031215611d1e57611d1d61175b565b5b5f611d2b85828601611888565b9250506020611d3c858286016117a9565b9150509250929050565b608082015f820151611d5a5f850182611c34565b506020820151611d6d60208501826117e8565b506040820151611d8060408501826117e8565b506060820151611d936060850182611c34565b50505050565b5f608082019050611dac5f830184611d46565b92915050565b602082015f820151611dc65f85018261196c565b50505050565b5f602082019050611ddf5f830184611db2565b92915050565b611dee81611717565b8114611df8575f5ffd5b50565b5f81359050611e0981611de5565b92915050565b5f5f60408385031215611e2557611e2461175b565b5b5f611e32858286016117a9565b9250506020611e4385828601611dfb565b9150509250929050565b606082015f820151611e615f8501826117e8565b506020820151611e7460208501826117e8565b506040820151611e8760408501826117e8565b50505050565b5f606082019050611ea05f830184611e4d565b92915050565b5f60029050919050565b5f81905092915050565b5f819050919050565b5f602082019050919050565b611ed881611ea6565b611ee28184611eb0565b9250611eed82611eba565b805f5b83811015611f1d578151611f048782611a37565b9650611f0f83611ec3565b925050600181019050611ef0565b505050505050565b5f606083015f8301518482035f860152611f3f82826118ff565b9150506020830151611f546020860182611ecf565b508091505092915050565b5f6020820190508181035f830152611f778184611f25565b905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b604082015f820151611fbc5f850182611ab6565b506020820151611fcf60208501826117e8565b50505050565b5f611fe08383611fa8565b60408301905092915050565b5f602082019050919050565b5f61200282611f7f565b61200c8185611f89565b935061201783611f99565b805f5b8381101561204757815161202e8882611fd5565b975061203983611fec565b92505060018101905061201a565b5085935050505092915050565b5f60a083015f8301516120695f8601826117e8565b50602083015161207c60208601826117e8565b50604083015161208f60408601826117e8565b5060608301516120a260608601826117e8565b50608083015184820360808601526120ba8282611ff8565b9150508091505092915050565b5f6020820190508181035f8301526120df8184612054565b905092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b606082015f8201516121245f850182611ab6565b50602082015161213760208501826117e8565b50604082015161214a60408501826117e8565b50505050565b5f61215b8383612110565b60608301905092915050565b5f602082019050919050565b5f61217d826120e7565b61218781856120f1565b935061219283612101565b805f5b838110156121c25781516121a98882612150565b97506121b483612167565b925050600181019050612195565b5085935050505092915050565b5f6020820190508181035f8301526121e78184612173565b905092915050565b602082015f8201516122035f8501826117e8565b50505050565b5f60208201905061221c5f8301846121ef565b92915050565b5f5f604083850312156122385761223761175b565b5b5f612245858286016117a9565b9250506020612256858286016117a9565b9150509250929050565b604082015f8201516122745f8501826117e8565b50602082015161228760208501826117e8565b50505050565b5f6040820190506122a05f830184612260565b92915050565b5f81519050919050565b5f81905092915050565b5f6122c4826122a6565b6122ce81856122b0565b93506122de8185602086016118e1565b80840191505092915050565b5f6122f582846122ba565b915081905092915050565b5f82825260208201905092915050565b7f4c31426c6f636b4e756d62657220707265636f6d70696c652063616c6c2066615f8201527f696c656400000000000000000000000000000000000000000000000000000000602082015250565b5f61236a602483612300565b915061237582612310565b604082019050919050565b5f6020820190508181035f8301526123978161235e565b9050919050565b5f815190506123ac81611de5565b92915050565b5f602082840312156123c7576123c661175b565b5b5f6123d48482850161239e565b91505092915050565b6123e681611782565b82525050565b5f6020820190506123ff5f8301846123dd565b92915050565b7f44656c656761746f727953756d6d61727920707265636f6d70696c652063616c5f8201527f6c206661696c6564000000000000000000000000000000000000000000000000602082015250565b5f61245f602883612300565b915061246a82612405565b604082019050919050565b5f6020820190508181035f83015261248c81612453565b9050919050565b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6124cd826118ef565b810181811067ffffffffffffffff821117156124ec576124eb612497565b5b80604052505050565b5f6124fe611752565b905061250a82826124c4565b919050565b5f5ffd5b5f6080828403121561252857612527612493565b5b61253260806124f5565b90505f6125418482850161239e565b5f8301525060206125548482850161239e565b60208301525060406125688482850161239e565b604083015250606061257c8482850161239e565b60608301525092915050565b5f6080828403121561259d5761259c61175b565b5b5f6125aa84828501612513565b91505092915050565b6125bc81611863565b82525050565b5f6020820190506125d55f8301846125b3565b92915050565b7f506572704173736574496e666f20707265636f6d70696c652063616c6c2066615f8201527f696c656400000000000000000000000000000000000000000000000000000000602082015250565b5f612635602483612300565b9150612640826125db565b604082019050919050565b5f6020820190508181035f83015261266281612629565b9050919050565b5f5ffd5b5f5ffd5b5f67ffffffffffffffff82111561268b5761268a612497565b5b612694826118ef565b9050602081019050919050565b5f6126b36126ae84612671565b6124f5565b9050828152602081018484840111156126cf576126ce61266d565b5b6126da8482856118e1565b509392505050565b5f82601f8301126126f6576126f5612669565b5b81516127068482602086016126a1565b91505092915050565b5f8151905061271d81611872565b92915050565b61272c81611946565b8114612736575f5ffd5b50565b5f8151905061274781612723565b92915050565b61275681611961565b8114612760575f5ffd5b50565b5f815190506127718161274d565b92915050565b5f60a0828403121561278c5761278b612493565b5b61279660a06124f5565b90505f82015167ffffffffffffffff8111156127b5576127b461250f565b5b6127c1848285016126e2565b5f8301525060206127d48482850161270f565b60208301525060406127e884828501612739565b60408301525060606127fc84828501612739565b606083015250608061281084828501612763565b60808301525092915050565b5f602082840312156128315761283061175b565b5b5f82015167ffffffffffffffff81111561284e5761284d61175f565b5b61285a84828501612777565b91505092915050565b7f546f6b656e496e666f20707265636f6d70696c652063616c6c206661696c65645f82015250565b5f612897602083612300565b91506128a282612863565b602082019050919050565b5f6020820190508181035f8301526128c48161288b565b9050919050565b5f67ffffffffffffffff8211156128e5576128e4612497565b5b602082029050602081019050919050565b5f5ffd5b5f61290c612907846128cb565b6124f5565b9050808382526020820190506020840283018581111561292f5761292e6128f6565b5b835b818110156129585780612944888261239e565b845260208401935050602081019050612931565b5050509392505050565b5f82601f83011261297657612975612669565b5b81516129868482602086016128fa565b91505092915050565b5f8151905061299d81611793565b92915050565b6129ac81611ac5565b81146129b6575f5ffd5b50565b5f815190506129c7816129a3565b92915050565b5f61010082840312156129e3576129e2612493565b5b6129ee6101006124f5565b90505f82015167ffffffffffffffff811115612a0d57612a0c61250f565b5b612a19848285016126e2565b5f83015250602082015167ffffffffffffffff811115612a3c57612a3b61250f565b5b612a4884828501612962565b6020830152506040612a5c8482850161239e565b6040830152506060612a708482850161298f565b6060830152506080612a848482850161298f565b60808301525060a0612a9884828501612739565b60a08301525060c0612aac84828501612739565b60c08301525060e0612ac0848285016129b9565b60e08301525092915050565b5f60208284031215612ae157612ae061175b565b5b5f82015167ffffffffffffffff811115612afe57612afd61175f565b5b612b0a848285016129cd565b91505092915050565b612b1c81611bb3565b82525050565b5f604082019050612b355f8301856123dd565b612b426020830184612b13565b9392505050565b7f506f736974696f6e20707265636f6d70696c652063616c6c206661696c6564005f82015250565b5f612b7d601f83612300565b9150612b8882612b49565b602082019050919050565b5f6020820190508181035f830152612baa81612b71565b9050919050565b612bba81611c28565b8114612bc4575f5ffd5b50565b5f81519050612bd581612bb1565b92915050565b5f60a08284031215612bf057612bef612493565b5b612bfa60a06124f5565b90505f612c0984828501612bc7565b5f830152506020612c1c8482850161239e565b6020830152506040612c3084828501612bc7565b6040830152506060612c448482850161270f565b6060830152506080612c5884828501612763565b60808301525092915050565b5f60a08284031215612c7957612c7861175b565b5b5f612c8684828501612bdb565b91505092915050565b7f42626f20707265636f6d70696c652063616c6c206661696c65640000000000005f82015250565b5f612cc3601a83612300565b9150612cce82612c8f565b602082019050919050565b5f6020820190508181035f830152612cf081612cb7565b9050919050565b5f60408284031215612d0c57612d0b612493565b5b612d1660406124f5565b90505f612d258482850161239e565b5f830152506020612d388482850161239e565b60208301525092915050565b5f60408284031215612d5957612d5861175b565b5b5f612d6684828501612cf7565b91505092915050565b7f53706f74507820707265636f6d70696c652063616c6c206661696c65640000005f82015250565b5f612da3601d83612300565b9150612dae82612d6f565b602082019050919050565b5f6020820190508181035f830152612dd081612d97565b9050919050565b5f604082019050612dea5f8301856125b3565b612df760208301846123dd565b9392505050565b7f4163636f756e74206d617267696e2073756d6d61727920707265636f6d70696c5f8201527f652063616c6c206661696c656400000000000000000000000000000000000000602082015250565b5f612e58602d83612300565b9150612e6382612dfe565b604082019050919050565b5f6020820190508181035f830152612e8581612e4c565b9050919050565b5f60808284031215612ea157612ea0612493565b5b612eab60806124f5565b90505f612eba84828501612bc7565b5f830152506020612ecd8482850161239e565b6020830152506040612ee18482850161239e565b6040830152506060612ef584828501612bc7565b60608301525092915050565b5f60808284031215612f1657612f1561175b565b5b5f612f2384828501612e8c565b91505092915050565b7f436f726520757365722065786973747320707265636f6d70696c652063616c6c5f8201527f206661696c656400000000000000000000000000000000000000000000000000602082015250565b5f612f86602783612300565b9150612f9182612f2c565b604082019050919050565b5f6020820190508181035f830152612fb381612f7a565b9050919050565b5f60208284031215612fcf57612fce612493565b5b612fd960206124f5565b90505f612fe884828501612763565b5f8301525092915050565b5f602082840312156130085761300761175b565b5b5f61301584828501612fba565b91505092915050565b5f6040820190506130315f8301856123dd565b61303e602083018461172a565b9392505050565b7f53706f7442616c616e636520707265636f6d70696c652063616c6c206661696c5f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f61309f602283612300565b91506130aa82613045565b604082019050919050565b5f6020820190508181035f8301526130cc81613093565b9050919050565b5f606082840312156130e8576130e7612493565b5b6130f260606124f5565b90505f6131018482850161239e565b5f8301525060206131148482850161239e565b60208301525060406131288482850161239e565b60408301525092915050565b5f606082840312156131495761314861175b565b5b5f613156848285016130d3565b91505092915050565b7f53706f74496e666f20707265636f6d70696c652063616c6c206661696c6564005f82015250565b5f613193601f83612300565b915061319e8261315f565b602082019050919050565b5f6020820190508181035f8301526131c081613187565b9050919050565b5f67ffffffffffffffff8211156131e1576131e0612497565b5b602082029050919050565b5f6131fe6131f9846131c7565b6124f5565b90508060208402830185811115613218576132176128f6565b5b835b81811015613241578061322d888261239e565b84526020840193505060208101905061321a565b5050509392505050565b5f82601f83011261325f5761325e612669565b5b600261326c8482856131ec565b91505092915050565b5f6060828403121561328a57613289612493565b5b61329460406124f5565b90505f82015167ffffffffffffffff8111156132b3576132b261250f565b5b6132bf848285016126e2565b5f8301525060206132d28482850161324b565b60208301525092915050565b5f602082840312156132f3576132f261175b565b5b5f82015167ffffffffffffffff8111156133105761330f61175f565b5b61331c84828501613275565b91505092915050565b7f546f6b656e537570706c7920707265636f6d70696c652063616c6c206661696c5f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f61337f602283612300565b915061338a82613325565b604082019050919050565b5f6020820190508181035f8301526133ac81613373565b9050919050565b5f67ffffffffffffffff8211156133cd576133cc612497565b5b602082029050602081019050919050565b5f604082840312156133f3576133f2612493565b5b6133fd60406124f5565b90505f61340c8482850161298f565b5f83015250602061341f8482850161239e565b60208301525092915050565b5f61343d613438846133b3565b6124f5565b905080838252602082019050604084028301858111156134605761345f6128f6565b5b835b81811015613489578061347588826133de565b845260208401935050604081019050613462565b5050509392505050565b5f82601f8301126134a7576134a6612669565b5b81516134b784826020860161342b565b91505092915050565b5f60a082840312156134d5576134d4612493565b5b6134df60a06124f5565b90505f6134ee8482850161239e565b5f8301525060206135018482850161239e565b60208301525060406135158482850161239e565b60408301525060606135298482850161239e565b606083015250608082015167ffffffffffffffff81111561354d5761354c61250f565b5b61355984828501613493565b60808301525092915050565b5f6020828403121561357a5761357961175b565b5b5f82015167ffffffffffffffff8111156135975761359661175f565b5b6135a3848285016134c0565b91505092915050565b7f44656c65676174696f6e7320707265636f6d70696c652063616c6c206661696c5f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f613606602283612300565b9150613611826135ac565b604082019050919050565b5f6020820190508181035f830152613633816135fa565b9050919050565b5f67ffffffffffffffff82111561365457613653612497565b5b602082029050602081019050919050565b5f6060828403121561367a57613679612493565b5b61368460606124f5565b90505f6136938482850161298f565b5f8301525060206136a68482850161239e565b60208301525060406136ba8482850161239e565b60408301525092915050565b5f6136d86136d38461363a565b6124f5565b905080838252602082019050606084028301858111156136fb576136fa6128f6565b5b835b8181101561372457806137108882613665565b8452602084019350506060810190506136fd565b5050509392505050565b5f82601f83011261374257613741612669565b5b81516137528482602086016136c6565b91505092915050565b5f602082840312156137705761376f61175b565b5b5f82015167ffffffffffffffff81111561378d5761378c61175f565b5b6137998482850161372e565b91505092915050565b7f4f7261636c65507820707265636f6d70696c652063616c6c206661696c6564005f82015250565b5f6137d6601f83612300565b91506137e1826137a2565b602082019050919050565b5f6020820190508181035f830152613803816137ca565b9050919050565b7f4d61726b507820707265636f6d70696c652063616c6c206661696c65640000005f82015250565b5f61383e601d83612300565b91506138498261380a565b602082019050919050565b5f6020820190508181035f83015261386b81613832565b9050919050565b7f576974686472617761626c6520707265636f6d70696c652063616c6c206661695f8201527f6c65640000000000000000000000000000000000000000000000000000000000602082015250565b5f6138cc602383612300565b91506138d782613872565b604082019050919050565b5f6020820190508181035f8301526138f9816138c0565b9050919050565b5f6020828403121561391557613914612493565b5b61391f60206124f5565b90505f61392e8482850161239e565b5f8301525092915050565b5f6020828403121561394e5761394d61175b565b5b5f61395b84828501613900565b91505092915050565b5f6040820190506139775f8301856123dd565b61398460208301846123dd565b9392505050565b7f5661756c7445717569747920707265636f6d70696c652063616c6c206661696c5f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f6139e5602283612300565b91506139f08261398b565b604082019050919050565b5f6020820190508181035f830152613a12816139d9565b9050919050565b5f60408284031215613a2e57613a2d612493565b5b613a3860406124f5565b90505f613a478482850161239e565b5f830152506020613a5a8482850161239e565b60208301525092915050565b5f60408284031215613a7b57613a7a61175b565b5b5f613a8884828501613a19565b9150509291505056fea2646970667358221220f30516a7807440d15b5f717c15e8e7a7af93cf150dbcf7953924a9dbbe550ce564736f6c634300081c0033";

  
      type L1ReadConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: L1ReadConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class L1Read__factory extends ContractFactory {
    
      constructor(...args: L1ReadConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<L1Read & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): L1Read__factory {
      return super.connect(runner) as L1Read__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): L1ReadInterface {
      return new Interface(_abi) as L1ReadInterface;
    }
    
    override attach(address: string | Addressable): L1Read {
      return super.attach(address) as L1Read;
    }
  static connect(address: string, runner?: ContractRunner | null): L1Read {
      return new Contract(address, _abi, runner) as unknown as L1Read;
    }
  }

  
  