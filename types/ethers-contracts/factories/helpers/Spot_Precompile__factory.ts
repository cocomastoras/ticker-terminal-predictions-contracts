/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../common.js"
  import type { Spot_Precompile, Spot_PrecompileInterface } from "../../helpers/Spot_Precompile.js";

  const _abi = [
  {
    "inputs": [],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "stateMutability": "nonpayable",
    "type": "fallback"
  }
] as const;

  const _bytecode = "0x6080604052348015600e575f5ffd5b506102878061001c5f395ff3fe608060405234801561000f575f5ffd5b505f3660605f838381019061002491906100dd565b90505f620186a0428363ffffffff1661003d919061013e565b60405160200161004d919061019f565b604051602081830303815290604052805190602001205f1c61006f91906101e6565b60405160200161007f9190610238565b60405160208183030381529060405290508092505050915050805190602001f35b5f5ffd5b5f63ffffffff82169050919050565b6100bc816100a4565b81146100c6575f5ffd5b50565b5f813590506100d7816100b3565b92915050565b5f602082840312156100f2576100f16100a0565b5b5f6100ff848285016100c9565b91505092915050565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61014882610108565b915061015383610108565b925082820261016181610108565b9150828204841483151761017857610177610111565b5b5092915050565b5f819050919050565b61019961019482610108565b61017f565b82525050565b5f6101aa8284610188565b60208201915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6101f082610108565b91506101fb83610108565b92508261020b5761020a6101b9565b5b828206905092915050565b5f67ffffffffffffffff82169050919050565b61023281610216565b82525050565b5f60208201905061024b5f830184610229565b9291505056fea26469706673582212206273c5bdf9fc71c9c6c9e55e7da580c3976bf924d2374279366b75f095b6ee9e64736f6c634300081c0033";

  
      type Spot_PrecompileConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: Spot_PrecompileConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class Spot_Precompile__factory extends ContractFactory {
    
      constructor(...args: Spot_PrecompileConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<Spot_Precompile & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): Spot_Precompile__factory {
      return super.connect(runner) as Spot_Precompile__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): Spot_PrecompileInterface {
      return new Interface(_abi) as Spot_PrecompileInterface;
    }
    
    override attach(address: string | Addressable): Spot_Precompile {
      return super.attach(address) as Spot_Precompile;
    }
  static connect(address: string, runner?: ContractRunner | null): Spot_Precompile {
      return new Contract(address, _abi, runner) as unknown as Spot_Precompile;
    }
  }

  
  